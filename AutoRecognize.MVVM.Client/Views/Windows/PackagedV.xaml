<Window x:Class="AutoRecognize.MVVM.Client.Views.Windows.PackagedV"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:AutoRecognize.MVVM.Client.Views.Windows"
        mc:Ignorable="d"
             DataContext="{Binding Source={StaticResource Locator},Path=PackagedValidate}"
             d:DesignHeight="300" d:DesignWidth="300">
    <Grid>
        <GroupBox Header="验证" Margin="10 20 10 10" >
            <StackPanel Orientation="Vertical" Margin="0,10,0,0">
                <StackPanel.Resources>
                    
                    <Style x:Key="{x:Type TextBoxBase}" TargetType="{x:Type TextBoxBase}" BasedOn="{x:Null}">
                        <Setter Property="BorderThickness" Value="1"/>
                        <Setter Property="Padding" Value="2,1,1,1"/>
                        <Setter Property="AllowDrop" Value="true"/>
                        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
                        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                        <Setter Property="SelectionBrush" Value="{DynamicResource Accent}" />
                        <Setter Property="Validation.ErrorTemplate">
                            <Setter.Value>
                                <ControlTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <Border BorderThickness="1" BorderBrush="#FFdc000c" VerticalAlignment="Top">
                                            <Grid>
                                                <AdornedElementPlaceholder x:Name="adorner" Margin="-1"/>
                                            </Grid>
                                        </Border>
                                        <Border x:Name="errorBorder" Background="#FFdc000c" Margin="8,0,0,0"
                                Opacity="0" CornerRadius="0"
                                IsHitTestVisible="False"
                                MinHeight="24" >
                                            <TextBlock Text="{Binding ElementName=adorner, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}"
                                       Foreground="White" Margin="8,2,8,3" TextWrapping="Wrap" VerticalAlignment="Center"/>
                                        </Border>
                                    </StackPanel>
                                    <ControlTemplate.Triggers>
                                        <DataTrigger Value="True">
                                            <DataTrigger.Binding>
                                                <Binding ElementName="adorner" Path="AdornedElement.IsKeyboardFocused" />
                                            </DataTrigger.Binding>
                                            <DataTrigger.EnterActions>
                                                <BeginStoryboard x:Name="fadeInStoryboard">
                                                    <Storyboard>
                                                        <DoubleAnimation Duration="00:00:00.15"
                                                         Storyboard.TargetName="errorBorder"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </DataTrigger.EnterActions>
                                            <DataTrigger.ExitActions>
                                                <StopStoryboard BeginStoryboardName="fadeInStoryboard"/>
                                                <BeginStoryboard x:Name="fadeOutStoryBoard">
                                                    <Storyboard>
                                                        <DoubleAnimation Duration="00:00:00"
                                                         Storyboard.TargetName="errorBorder"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </DataTrigger.ExitActions>
                                        </DataTrigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                                    <Border x:Name="Bd"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                                        <ScrollViewer x:Name="PART_ContentHost" RenderOptions.ClearTypeHint="Enabled"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter Property="Foreground" Value="{DynamicResource InputTextDisabled}"/>
                                        </Trigger>
                                        <Trigger Property="IsReadOnly" Value="true">
                                            <Setter Property="Foreground" Value="{DynamicResource InputTextDisabled}"/>
                                        </Trigger>
                                        <Trigger Property="IsFocused" Value="true">
                                            <Setter TargetName="Bd" Property="BorderBrush" Value="{DynamicResource Accent}" />
                                        </Trigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsReadOnly" Value="False"/>
                                                <Condition Property="IsEnabled" Value="True"/>
                                                <Condition Property="IsMouseOver" Value="True"/>
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Background" Value="{DynamicResource InputBackgroundHover}"/>
                                            <Setter Property="BorderBrush" Value="{DynamicResource InputBorderHover}"/>
                                            <Setter Property="Foreground" Value="{DynamicResource InputTextHover}"/>
                                        </MultiTrigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    <Style BasedOn="{StaticResource {x:Type TextBoxBase}}" TargetType="{x:Type TextBox}">
                    </Style>
                    <Style BasedOn="{StaticResource {x:Type TextBoxBase}}" TargetType="{x:Type RichTextBox}">
                    </Style>
                    
                    <Style TargetType="StackPanel">
                        <Setter Property="Orientation" Value="Horizontal" />
                        <Setter Property="Margin" Value="0,0,0,4" />
                    </Style>
                    <Style TargetType="Label" BasedOn="{StaticResource {x:Type Label}}">
                        <Setter Property="Width" Value="100" />
                        <Setter Property="VerticalAlignment" Value="Center" />
                    </Style>
                    <Style TargetType="CheckBox" BasedOn="{StaticResource {x:Type CheckBox}}">
                        <Setter Property="Padding" Value="0,3" />
                    </Style>
                    <Style TargetType="RadioButton" BasedOn="{StaticResource {x:Type RadioButton}}">
                        <Setter Property="Padding" Value="0,3" />
                    </Style>
                </StackPanel.Resources>

                <StackPanel>
                    <Label Content="用户名" Target="{Binding ElementName=UserName}"/>
                    <TextBox Width="150" 
                                 Text="{Binding ValidateUI.UserName,UpdateSourceTrigger=PropertyChanged,ValidatesOnDataErrors=True}" >
                    </TextBox>
                </StackPanel>
                <StackPanel>
                    <Label Content="用户邮箱" Target="{Binding ElementName=UserEmail}"/>
                    <TextBox Width="150" Text="{Binding ValidateUI.UserEmail, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" />
                </StackPanel>
                <StackPanel>
                    <Label Content="用户电话" Target="{Binding ElementName=UserPhone}"/>
                    <TextBox Width="150" Text="{Binding ValidateUI.UserPhone,UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" />
                </StackPanel>

                <Button Content="提交" Margin="100,16,0,0" HorizontalAlignment="Left" Command="{Binding SubmitCmd}" />
            </StackPanel>

        </GroupBox>
    </Grid>
</Window>
